{
  "swagger": "2.0",
  "info": {
    "title": "Book api",
    "version": "1.0",
    "contact": {
      "name": "Docker buf project",
      "url": "https://github.com/eugene-bert/docker-buf"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/eugene-bert/docker-buf/blob/main/License.md"
    }
  },
  "tags": [
    {
      "name": "BookService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/{book.name}": {
      "patch": {
        "summary": "Update an existing book",
        "operationId": "BookService_UpdateBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Book"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "book.name",
            "description": "The resource name of the book.\nFormat: publishers/{publisher}/books/{book}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+/books/[^/]+"
          },
          {
            "name": "book",
            "description": "The book to update.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of the book."
                },
                "author": {
                  "type": "string",
                  "description": "The author of the book."
                },
                "format": {
                  "$ref": "#/definitions/v1Format",
                  "description": "The format of the book."
                },
                "isbn": {
                  "type": "string",
                  "title": "ISBN number"
                },
                "pages": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Number of pages"
                },
                "publicationYear": {
                  "type": "integer",
                  "format": "int32",
                  "title": "Publication year"
                },
                "description": {
                  "type": "string",
                  "title": "Book description"
                }
              },
              "title": "The book to update.",
              "required": [
                "title",
                "book"
              ]
            }
          },
          {
            "name": "updateMask",
            "description": "The list of fields to update.\nUse \"*\" to update all fields.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BookService"
        ]
      }
    },
    "/v1/{name}": {
      "get": {
        "summary": "Get a single book by name",
        "operationId": "BookService_GetBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the book to retrieve.\nFormat: publishers/{publisher}/books/{book}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+/books/[^/]+"
          }
        ],
        "tags": [
          "BookService"
        ]
      },
      "delete": {
        "summary": "Delete a book",
        "operationId": "BookService_DeleteBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteBookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the book to delete.\nFormat: publishers/{publisher}/books/{book}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+/books/[^/]+"
          }
        ],
        "tags": [
          "BookService"
        ]
      }
    },
    "/v1/{parent}/books": {
      "get": {
        "summary": "List all books for a publisher with pagination",
        "operationId": "BookService_ListBooks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBooksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent publisher resource name.\nFormat: publishers/{publisher}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+"
          },
          {
            "name": "pageSize",
            "description": "The maximum number of books to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "The page token for pagination.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "format",
            "description": "Optional filter by format\n\n - FORMAT_UNSPECIFIED: Default value. This value is unused.\n - FORMAT_HARDBACK: The printed format, in hardback.\n - FORMAT_PAPERBACK: The printed format, in paperback.\n - FORMAT_EBOOK: An electronic book format.\n - FORMAT_AUDIOBOOK: An audio recording.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FORMAT_UNSPECIFIED",
              "FORMAT_HARDBACK",
              "FORMAT_PAPERBACK",
              "FORMAT_EBOOK",
              "FORMAT_AUDIOBOOK"
            ],
            "default": "FORMAT_UNSPECIFIED"
          }
        ],
        "tags": [
          "BookService"
        ]
      },
      "post": {
        "summary": "Create a new book",
        "operationId": "BookService_CreateBook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Book"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent publisher resource name.\nFormat: publishers/{publisher}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+"
          },
          {
            "name": "book",
            "description": "The book to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Book"
            }
          }
        ],
        "tags": [
          "BookService"
        ]
      }
    },
    "/v1/{parent}/books:search": {
      "get": {
        "summary": "Search books by title or author",
        "operationId": "BookService_SearchBooks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchBooksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent publisher resource name.\nFormat: publishers/{publisher}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "publishers/[^/]+"
          },
          {
            "name": "query",
            "description": "Search query (searches title and author)",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "Maximum number of results",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "Page token for pagination",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "format",
            "description": "Optional filter by format\n\n - FORMAT_UNSPECIFIED: Default value. This value is unused.\n - FORMAT_HARDBACK: The printed format, in hardback.\n - FORMAT_PAPERBACK: The printed format, in paperback.\n - FORMAT_EBOOK: An electronic book format.\n - FORMAT_AUDIOBOOK: An audio recording.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FORMAT_UNSPECIFIED",
              "FORMAT_HARDBACK",
              "FORMAT_PAPERBACK",
              "FORMAT_EBOOK",
              "FORMAT_AUDIOBOOK"
            ],
            "default": "FORMAT_UNSPECIFIED"
          }
        ],
        "tags": [
          "BookService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Book": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The resource name of the book.\nFormat: publishers/{publisher}/books/{book}"
        },
        "title": {
          "type": "string",
          "description": "The title of the book."
        },
        "author": {
          "type": "string",
          "description": "The author of the book."
        },
        "format": {
          "$ref": "#/definitions/v1Format",
          "description": "The format of the book."
        },
        "isbn": {
          "type": "string",
          "title": "ISBN number"
        },
        "pages": {
          "type": "integer",
          "format": "int32",
          "title": "Number of pages"
        },
        "publicationYear": {
          "type": "integer",
          "format": "int32",
          "title": "Publication year"
        },
        "description": {
          "type": "string",
          "title": "Book description"
        }
      },
      "description": "A representation of a book.",
      "required": [
        "name",
        "title"
      ]
    },
    "v1DeleteBookResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "Success indicator"
        },
        "message": {
          "type": "string",
          "title": "Optional message"
        }
      },
      "title": "Response message for DeleteBook"
    },
    "v1Format": {
      "type": "string",
      "enum": [
        "FORMAT_UNSPECIFIED",
        "FORMAT_HARDBACK",
        "FORMAT_PAPERBACK",
        "FORMAT_EBOOK",
        "FORMAT_AUDIOBOOK"
      ],
      "default": "FORMAT_UNSPECIFIED",
      "description": "Possible formats in which the book may be published.\n\n - FORMAT_UNSPECIFIED: Default value. This value is unused.\n - FORMAT_HARDBACK: The printed format, in hardback.\n - FORMAT_PAPERBACK: The printed format, in paperback.\n - FORMAT_EBOOK: An electronic book format.\n - FORMAT_AUDIOBOOK: An audio recording."
    },
    "v1GetBookResponse": {
      "type": "object",
      "properties": {
        "format": {
          "$ref": "#/definitions/v1Format",
          "description": "The format of the book."
        },
        "name": {
          "type": "string",
          "title": "The name of the book"
        }
      },
      "title": "Response for GetBook",
      "required": [
        "name"
      ]
    },
    "v1ListBooksResponse": {
      "type": "object",
      "properties": {
        "books": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Book"
          },
          "description": "The list of books."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token for the next page of results."
        },
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "title": "Total count of books"
        }
      },
      "title": "Response message for ListBooks"
    },
    "v1SearchBooksResponse": {
      "type": "object",
      "properties": {
        "books": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Book"
          },
          "description": "The list of books matching the search."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token for the next page of results."
        },
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "title": "Total count of matching books"
        }
      },
      "title": "Response message for SearchBooks"
    }
  },
  "externalDocs": {
    "description": "More about Docker buf",
    "url": "https://github.com/eugene-bert/docker-buf"
  }
}
